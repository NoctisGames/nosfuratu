import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'com.android.application'

android {
    signingConfigs {
        noctisgames {
            keyAlias 'noctisgames'
            keyPassword 'NG_PASS'
            storeFile file('../keystore.jks')
            storePassword 'NG_PASS'
        }
    }
    compileSdkVersion 25
    buildToolsVersion "23.0.3"
    defaultConfig {
        applicationId "com.noctisgames.nosfuratu"
        minSdkVersion 17
        targetSdkVersion 25
        versionCode 1
        versionName "1.2.0"
        signingConfig signingConfigs.noctisgames
    }
    buildTypes {
        release {
            debuggable false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
        }
    }
    sourceSets.main {
        jniLibs.srcDir 'src/main/libs'
        jni.srcDirs = [] // disable the automatic ndk-build call, which would ignore our Android.mk
    }
    // call regular ndk-build(.cmd) script from app directory
    task ndkBuild(type: Exec) {
        workingDir file('src/main')
        commandLine getNdkBuildCmd()
    }
    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn ndkBuild
    }
    task cleanNative(type: Exec) {
        workingDir file('src/main')
        commandLine getNdkBuildCmd(), 'clean'
    }
    clean.dependsOn cleanNative

    task copyShaders(type: Copy)
    copyShaders {
        description = 'Copies shaders into project assets'
        from '../../../../src/core/framework/ui/opengl/shader'
        from '../../../../src/core/game/ui/opengl/shader'
        into 'src/main/assets'
        include('*.vsh')
        include('*.fsh')
    }

    task copyTextures(type: Copy)
    copyTextures {
        description = 'Copies textures from root assets into project assets'
        from '../../../../assets/textures'
        from '../../../../assets/textures/compressed'
        into 'src/main/assets'
        include('*.png')
    }

    task copySounds(type: Copy)
    copySounds {
        description = 'Copies music and sounds from root assets into project assets'
        from '../../../../assets/music'
        from '../../../../assets/sounds'
        into 'src/main/res/raw'
        include('*.wav')
    }

    preBuild.dependsOn(copyShaders)
    preBuild.dependsOn(copyTextures)
    preBuild.dependsOn(copySounds)
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.google.android.gms:play-services-games:10.2.1'
    compile 'com.google.android.gms:play-services-plus:10.2.1'
    compile 'com.google.firebase:firebase-ads:10.2.1'
}

def getNdkDir() {
    if (System.env.ANDROID_NDK_ROOT != null)
        return System.env.ANDROID_NDK_ROOT

    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    def ndkdir = properties.getProperty('ndk.dir', null)
    if (ndkdir == null) {
        ndkdir = "~/android-ndk-r10e" // for buddybuild
    }

    return ndkdir
}

def getNdkBuildCmd() {
    def ndkbuild = getNdkDir() + "/ndk-build"
    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        ndkbuild += ".cmd"
    }

    return ndkbuild
}

apply plugin: 'com.google.gms.google-services'
